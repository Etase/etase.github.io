<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2025/08/16/MyBlog/0/"/>
      <url>/2025/08/16/MyBlog/0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Blender Python API (0)</title>
      <link href="/2025/08/16/Blender/0/"/>
      <url>/2025/08/16/Blender/0/</url>
      
        <content type="html"><![CDATA[<p>我们习惯于在<strong>二维平面上描绘数据的世界</strong>。<br>过去很长一段时间，我像许多数据工作者一样，依赖着<span class="svg-icon python-icon"> Python</span> 的 <code>Matplotlib</code>、<span class="svg-icon julia-icon">Julia</span> 的 <code>Makie</code> 等优秀传统框架。<br>我曾为它们绘制出精美的散点图、热力图、动态折线图而欣喜，也曾为了在有限的平面空间里，绞尽脑汁地展现高维数据的结构、捕捉复杂系统中的动态关系、或者让网络拓扑中的关键连接一目了然而感到力不从心。</p><p>我想是时候做出改变了。<br>三天前，我在查找 <span class="svg-icon blender-icon">Blender</span> 的入门资料时，偶然翻到了一篇介绍 <code>Blender Python API</code> 的文档 —— 那一刻我才意识到，这就是我真正想要的突破口。<br>它不仅能用代码塑造几何形体，还能操控材质、光影、动画乃至物理模拟。</p><!-- 对于一个长期在平面图表的“方寸之地”里与数据打交道的我来说，这感觉太奇妙了。数据不再仅仅是屏幕上的线条和色块，它们仿佛被赋予了体积、重量和生命，被“置入”一个可感、可走入、可互动的立体空间。想象一下，那些抽象的关系，变成了可以环绕观察、甚至“触摸”的实体——这简直是数据表达的一次维度跃迁！ --><p>在接下来的系列文章里，我们将逐步探索 <code>Blender Python API</code> 的强大潜力，欣赏它如何将冰冷的数据，转化为充满魅力的三维叙事。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Blender Python API (1)</title>
      <link href="/2025/08/15/Blender/1/"/>
      <url>/2025/08/15/Blender/1/</url>
      
        <content type="html"><![CDATA[<h2 id="创建几何体">创建几何体</h2><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>+</mo><msup><mi>b</mi><mn>2</mn></msup><mo>=</mo><msup><mi>c</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">a^2 + b^2 = c^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8641em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8641em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><h3 id="几何体接口">几何体接口</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">cube</span>(<span class="hljs-params">size: <span class="hljs-built_in">float</span>, location: <span class="hljs-built_in">tuple</span></span>):<br>    bpy.ops.mesh.primitive_cube_add(size=size, location=location)<br>    <span class="hljs-keyword">return</span> bpy.context.active_object<br></code></pre></td></tr></tbody></table></figure><h3 id="猴头模型">猴头模型</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">monkey</span>(<span class="hljs-params">size: <span class="hljs-built_in">float</span> = <span class="hljs-number">2.0</span>, location: <span class="hljs-built_in">tuple</span> = (<span class="hljs-params"><span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span></span>)</span>):<br>    <span class="hljs-string">"""</span><br><span class="hljs-string">    创建一个猴头 (Suzanne) 模型。</span><br><span class="hljs-string">    :param size: 猴头的大小。</span><br><span class="hljs-string">    :param location: 猴头的位置 (x, y, z)。</span><br><span class="hljs-string">    :return: 新创建的 bpy.types.Object。</span><br><span class="hljs-string">    """</span><br>    <span class="hljs-comment"># 使用 primitive_monkey_add 操作符</span><br>    bpy.ops.mesh.primitive_monkey_add(size=size, location=location)<br><br>    <span class="hljs-comment"># 返回新创建的猴头对象</span><br>    <span class="hljs-keyword">return</span> bpy.context.active_object<br></code></pre></td></tr></tbody></table></figure><h2 id="清空画面">清空画面</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete_all</span>(<span class="hljs-params">exceptions=[<span class="hljs-string">"CAMERA"</span>, <span class="hljs-string">"LIGHT"</span>]</span>):<br><br>    <span class="hljs-keyword">if</span> bpy.context.scene <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>        all_objects = bpy.context.scene.objects<br><br>        objects_to_delete = [obj <span class="hljs-keyword">for</span> obj <span class="hljs-keyword">in</span> all_objects <span class="hljs-keyword">if</span> obj.<span class="hljs-built_in">type</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> exceptions]<br><br>        <span class="hljs-keyword">for</span> obj <span class="hljs-keyword">in</span> objects_to_delete:<br>            obj.select_set(<span class="hljs-literal">True</span>)<br><br>        bpy.ops.<span class="hljs-built_in">object</span>.delete()<br></code></pre></td></tr></tbody></table></figure><h2 id="变换">变换</h2><h3 id="变换接口">变换接口</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">move_object</span>(<span class="hljs-params">obj, x: <span class="hljs-built_in">float</span> = <span class="hljs-number">0</span>, y: <span class="hljs-built_in">float</span> = <span class="hljs-number">0</span>, z: <span class="hljs-built_in">float</span> = <span class="hljs-number">0</span></span>):<br>    <span class="hljs-string">"""</span><br><span class="hljs-string">    移动一个对象。</span><br><span class="hljs-string">    :param obj: 要移动的 bpy.types.Object。</span><br><span class="hljs-string">    :param x, y, z: 在各轴上的移动距离。</span><br><span class="hljs-string">    """</span><br>    obj.location.x += x<br>    obj.location.y += y<br>    obj.location.z += z<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">rotate_object</span>(<span class="hljs-params"></span><br><span class="hljs-params">    obj, x: <span class="hljs-built_in">float</span> = <span class="hljs-number">0</span>, y: <span class="hljs-built_in">float</span> = <span class="hljs-number">0</span>, z: <span class="hljs-built_in">float</span> = <span class="hljs-number">0</span>, use_degrees: <span class="hljs-built_in">bool</span> = <span class="hljs-literal">True</span></span><br><span class="hljs-params"></span>):<br>    <span class="hljs-string">"""</span><br><span class="hljs-string">    旋转一个对象。</span><br><span class="hljs-string">    :param obj: 要旋转的 bpy.types.Object。</span><br><span class="hljs-string">    :param x, y, z: 在各轴上的旋转角度。</span><br><span class="hljs-string">    :param use_degrees: 如果为 True，则使用度数；否则使用弧度。</span><br><span class="hljs-string">    """</span><br>    <span class="hljs-keyword">if</span> use_degrees:<br>        x, y, z = math.radians(x), math.radians(y), math.radians(z)<br><br>    obj.rotation_euler.x += x<br>    obj.rotation_euler.y += y<br>    obj.rotation_euler.z += z<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">scale_object</span>(<span class="hljs-params">obj, x: <span class="hljs-built_in">float</span> = <span class="hljs-number">1</span>, y: <span class="hljs-built_in">float</span> = <span class="hljs-number">1</span>, z: <span class="hljs-built_in">float</span> = <span class="hljs-number">1</span></span>):<br>    <span class="hljs-string">"""</span><br><span class="hljs-string">    缩放一个对象。</span><br><span class="hljs-string">    :param obj: 要缩放的 bpy.types.Object。</span><br><span class="hljs-string">    :param x, y, z: 在各轴上的缩放倍数。</span><br><span class="hljs-string">    """</span><br>    obj.scale.x *= x<br>    obj.scale.y *= y<br>    obj.scale.z *= z<br></code></pre></td></tr></tbody></table></figure><h2 id="关联">关联</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">parent_objects</span>(<span class="hljs-params">parent_obj, child_obj</span>):<br>    <span class="hljs-string">"""</span><br><span class="hljs-string">    将一个对象设置为另一个对象的子对象。</span><br><span class="hljs-string">    :param parent_obj: 父对象。</span><br><span class="hljs-string">    :param child_obj: 子对象。</span><br><span class="hljs-string">    """</span><br>    <span class="hljs-comment"># 清除子对象之前的父子关系（可选）</span><br>    child_obj.parent = <span class="hljs-literal">None</span><br><br>    <span class="hljs-comment"># 设置父子关系</span><br>    child_obj.parent = parent_obj<br><br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/03/18/hello-world/"/>
      <url>/2025/03/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new <span class="hljs-string">"My New Post"</span><br></code></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
